{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\Codeit Sprint\\\\part-2\\\\react-practice\\\\moviepedia\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\nimport ReviewList from \"./ReviewList\";\nimport { useEffect, useState } from \"react\";\nimport { createReview, deleteReview, getReviews, updateReview } from \"./api\";\nimport ReviewForm from \"./ReviewForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LIMIT = 6;\nfunction App() {\n  _s();\n  // 최상위 컴포넌트\n  const [items, setItems] = useState([]);\n  const [order, setOrder] = useState(\"createdAt\");\n  const [offset, setOffset] = useState(0);\n  const [hasNext, setHasNext] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingError, setLoadingError] = useState(null);\n  const handleNewstClick = () => setOrder(\"createdAt\");\n  const handleBestClick = () => setOrder(\"rating\");\n  const sortedItems = items.sort((a, b) => b[order] - a[order]);\n  const handleDelete = async id => {\n    const reslut = await deleteReview(id);\n    if (!reslut) return;\n    setItems(prevItems => prevItems.filter(item => item.id !== id));\n  };\n  const handleLoad = async options => {\n    let result;\n    try {\n      // 로딩 시작\n      setIsLoading(true);\n      setLoadingError(null);\n      result = await getReviews(options);\n    } catch (error) {\n      setLoadingError(error);\n      return;\n    } finally {\n      // 리퀘스트가 실패하거나 성공하는 경우\n      // 오류가 나도 항상 로딩 값은 false\n      setIsLoading(false);\n    }\n    const {\n      reviews,\n      paging\n    } = result;\n    if (options.offset === 0) {\n      setItems(reviews);\n    } else {\n      // previtems : 현재 state 값\n      setItems(previtems => [...previtems, ...reviews]);\n    }\n    // 데이터를 받아온 후 작업 offset limit값만큼 증가\n    setOffset(options.offset + reviews.length);\n    setHasNext(paging.hasNext); // 리스폰스에 있는 paging 객체\n  };\n  const handleLoadMore = () => {\n    // 다음 페이지를 불러오는 함수\n    handleLoad({\n      order,\n      offset,\n      limit: LIMIT\n    });\n  };\n  const handleCreateSuccess = review => {\n    setItems(prevItems => [review, ...prevItems]);\n  };\n  const handleUpdateSuccess = review => {\n    setItems(prevItems => {\n      const splitIdx = prevItems.findIndex(item => item.id === review.id);\n      // 수정할 인덱스 찾기\n      // 기존 리뷰 배열에서 같은 아이디에 해당하는 리뷰 갈아끼움 ..\n      return [...prevItems.slice(0, splitIdx), review, ...prevItems.slice(splitIdx + 1)];\n    });\n  };\n  useEffect(() => {\n    handleLoad({\n      order,\n      offset: 0,\n      limit: LIMIT\n    });\n  }, [order]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNewstClick,\n        children: \"\\uCD5C\\uC2E0\\uC21C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBestClick,\n        children: \"\\uBCA0\\uC2A4\\uD2B8\\uC21C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReviewForm, {\n      onSubmitSuccess: handleCreateSuccess,\n      onSubmit: createReview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReviewList, {\n      items: sortedItems,\n      onDelete: handleDelete,\n      onUpdate: updateReview,\n      onUpdateSuccess: handleUpdateSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), hasNext && /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: isLoading,\n      onClick: handleLoadMore,\n      children: \"\\uB354\\uBCF4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), (loadingError === null || loadingError === void 0 ? void 0 : loadingError.message) && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: loadingError.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+gu9lmJQMbnvgHH4q7E/ybEhInI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ReviewList","useEffect","useState","createReview","deleteReview","getReviews","updateReview","ReviewForm","jsxDEV","_jsxDEV","LIMIT","App","_s","items","setItems","order","setOrder","offset","setOffset","hasNext","setHasNext","isLoading","setIsLoading","loadingError","setLoadingError","handleNewstClick","handleBestClick","sortedItems","sort","a","b","handleDelete","id","reslut","prevItems","filter","item","handleLoad","options","result","error","reviews","paging","previtems","length","handleLoadMore","limit","handleCreateSuccess","review","handleUpdateSuccess","splitIdx","findIndex","slice","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmitSuccess","onSubmit","onDelete","onUpdate","onUpdateSuccess","disabled","message","_c","$RefreshReg$"],"sources":["C:/Programming/Codeit Sprint/part-2/react-practice/moviepedia/src/components/App.js"],"sourcesContent":["import ReviewList from \"./ReviewList\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { createReview, deleteReview, getReviews, updateReview } from \"./api\";\r\nimport ReviewForm from \"./ReviewForm\";\r\n\r\nconst LIMIT = 6;\r\n\r\nfunction App() {\r\n  // 최상위 컴포넌트\r\n  const [items, setItems] = useState([]);\r\n  const [order, setOrder] = useState(\"createdAt\");\r\n  const [offset, setOffset] = useState(0);\r\n  const [hasNext, setHasNext] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [loadingError, setLoadingError] = useState(null);\r\n\r\n  const handleNewstClick = () => setOrder(\"createdAt\");\r\n  const handleBestClick = () => setOrder(\"rating\");\r\n\r\n  const sortedItems = items.sort((a, b) => b[order] - a[order]);\r\n\r\n  const handleDelete = async (id) => {\r\n    const reslut = await deleteReview(id);\r\n    if (!reslut) return;\r\n\r\n    setItems((prevItems) => prevItems.filter((item) => item.id !== id));\r\n  };\r\n\r\n  const handleLoad = async (options) => {\r\n    let result;\r\n    try {\r\n      // 로딩 시작\r\n      setIsLoading(true);\r\n      setLoadingError(null);\r\n      result = await getReviews(options);\r\n    } catch (error) {\r\n      setLoadingError(error);\r\n      return;\r\n    } finally {\r\n      // 리퀘스트가 실패하거나 성공하는 경우\r\n      // 오류가 나도 항상 로딩 값은 false\r\n      setIsLoading(false);\r\n    }\r\n    const { reviews, paging } = result;\r\n    if (options.offset === 0) {\r\n      setItems(reviews);\r\n    } else {\r\n      // previtems : 현재 state 값\r\n      setItems((previtems) => [...previtems, ...reviews]);\r\n    }\r\n    // 데이터를 받아온 후 작업 offset limit값만큼 증가\r\n    setOffset(options.offset + reviews.length);\r\n    setHasNext(paging.hasNext); // 리스폰스에 있는 paging 객체\r\n  };\r\n\r\n  const handleLoadMore = () => {\r\n    // 다음 페이지를 불러오는 함수\r\n    handleLoad({ order, offset, limit: LIMIT });\r\n  };\r\n\r\n  const handleCreateSuccess = (review) => {\r\n    setItems((prevItems) => [review, ...prevItems]);\r\n  };\r\n\r\n  const handleUpdateSuccess = (review) => {\r\n    setItems((prevItems) => {\r\n      const splitIdx = prevItems.findIndex((item) => item.id === review.id);\r\n      // 수정할 인덱스 찾기\r\n      // 기존 리뷰 배열에서 같은 아이디에 해당하는 리뷰 갈아끼움 ..\r\n      return [\r\n        ...prevItems.slice(0, splitIdx),\r\n        review,\r\n        ...prevItems.slice(splitIdx + 1),\r\n      ];\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleLoad({ order, offset: 0, limit: LIMIT });\r\n  }, [order]);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <button onClick={handleNewstClick}>최신순</button>\r\n        <button onClick={handleBestClick}>베스트순</button>\r\n      </div>\r\n      <ReviewForm\r\n        onSubmitSuccess={handleCreateSuccess}\r\n        onSubmit={createReview}\r\n      />\r\n      <ReviewList\r\n        items={sortedItems}\r\n        onDelete={handleDelete}\r\n        onUpdate={updateReview}\r\n        onUpdateSuccess={handleUpdateSuccess}\r\n      />\r\n\r\n      {/* hasNext 값이 true인 경우 실행, false인 경우 표현식 계산하지 않고 hasNext의 값을 사용함 (리액트에서 false 값은 렌더링하지 않음)  \r\n      로딩되고 있는 경우에는 버튼을 비활성화 처리 \r\n      비활성화 처리하지 않는 경우 로딩 중에 버튼을 클릭할 수 있어 불필요한 리퀘스트 발생 가능함 */}\r\n      {hasNext && (\r\n        <button disabled={isLoading} onClick={handleLoadMore}>\r\n          더보기\r\n        </button>\r\n      )}\r\n      {loadingError?.message && <span>{loadingError.message}</span>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}