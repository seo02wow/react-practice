{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\Codeit Sprint\\\\part-2\\\\react-practice\\\\moviepedia\\\\src\\\\components\\\\FileInput.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileInput({\n  name,\n  value,\n  onChange,\n  initalPreview\n}) {\n  _s();\n  const [preview, setPreview] = useState(initalPreview);\n  const inputRef = useRef();\n  const handleChange = e => {\n    const nextValue = e.target.files[0];\n    onChange(name, nextValue);\n  };\n  const handleClearClick = () => {\n    const inputNode = inputRef.current;\n    if (!inputNode) return; // 값이 없는 경우 함수 종료\n    inputNode.value = \"\";\n    onChange(name, null); // 부모 컴포넌트에서 이미지 파일 값이 null\n  };\n\n  // value = img URL\n  // 파일을 선택할 때마다 미리 보기 주소를 바꿈\n  useEffect(() => {\n    if (!value) return;\n    const nextPreview = URL.createObjectURL(value); // side effect 발생\n    setPreview(nextPreview);\n    return () => {\n      // 정리 함수\n      setPreview(); // 빈 값으로 초기화\n      URL.revokeObjectURL(nextPreview); // ObjectURL해제\n    };\n  }, [value]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: preview,\n      alt: \"\\uC774\\uBBF8\\uC9C0 \\uBBF8\\uB9AC\\uBCF4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/png, image/jpeg\",\n      onChange: handleChange,\n      ref: inputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), value && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClearClick,\n      children: \" X \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(FileInput, \"Tbg20IymZiIWsI4PWhuvCM0i0So=\");\n_c = FileInput;\nexport default FileInput;\nvar _c;\n$RefreshReg$(_c, \"FileInput\");","map":{"version":3,"names":["useEffect","useRef","useState","jsxDEV","_jsxDEV","FileInput","name","value","onChange","initalPreview","_s","preview","setPreview","inputRef","handleChange","e","nextValue","target","files","handleClearClick","inputNode","current","nextPreview","URL","createObjectURL","revokeObjectURL","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","ref","onClick","_c","$RefreshReg$"],"sources":["C:/Programming/Codeit Sprint/part-2/react-practice/moviepedia/src/components/FileInput.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\n\r\nfunction FileInput({ name, value, onChange, initalPreview }) {\r\n  const [preview, setPreview] = useState(initalPreview);\r\n\r\n  const inputRef = useRef();\r\n\r\n  const handleChange = (e) => {\r\n    const nextValue = e.target.files[0];\r\n    onChange(name, nextValue);\r\n  };\r\n\r\n  const handleClearClick = () => {\r\n    const inputNode = inputRef.current;\r\n    if (!inputNode) return; // 값이 없는 경우 함수 종료\r\n    inputNode.value = \"\";\r\n    onChange(name, null); // 부모 컴포넌트에서 이미지 파일 값이 null\r\n  };\r\n\r\n  // value = img URL\r\n  // 파일을 선택할 때마다 미리 보기 주소를 바꿈\r\n  useEffect(() => {\r\n    if (!value) return;\r\n\r\n    const nextPreview = URL.createObjectURL(value); // side effect 발생\r\n    setPreview(nextPreview);\r\n\r\n    return () => {\r\n      // 정리 함수\r\n      setPreview(); // 빈 값으로 초기화\r\n      URL.revokeObjectURL(nextPreview); // ObjectURL해제\r\n    };\r\n  }, [value]);\r\n\r\n  return (\r\n    <div>\r\n      <img src={preview} alt=\"이미지 미리보기\" />\r\n      <input\r\n        type=\"file\"\r\n        accept=\"image/png, image/jpeg\"\r\n        onChange={handleChange}\r\n        ref={inputRef}\r\n      />\r\n      {/* // value 값이 있을 때만 렌더링 */}\r\n      {value && <button onClick={handleClearClick}> X </button>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileInput;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,SAASA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC,QAAQ;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EAC3D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAACO,aAAa,CAAC;EAErD,MAAMI,QAAQ,GAAGZ,MAAM,CAAC,CAAC;EAEzB,MAAMa,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAMC,SAAS,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACnCV,QAAQ,CAACF,IAAI,EAAEU,SAAS,CAAC;EAC3B,CAAC;EAED,MAAMG,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,SAAS,GAAGP,QAAQ,CAACQ,OAAO;IAClC,IAAI,CAACD,SAAS,EAAE,OAAO,CAAC;IACxBA,SAAS,CAACb,KAAK,GAAG,EAAE;IACpBC,QAAQ,CAACF,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;EACxB,CAAC;;EAED;EACA;EACAN,SAAS,CAAC,MAAM;IACd,IAAI,CAACO,KAAK,EAAE;IAEZ,MAAMe,WAAW,GAAGC,GAAG,CAACC,eAAe,CAACjB,KAAK,CAAC,CAAC,CAAC;IAChDK,UAAU,CAACU,WAAW,CAAC;IAEvB,OAAO,MAAM;MACX;MACAV,UAAU,CAAC,CAAC,CAAC,CAAC;MACdW,GAAG,CAACE,eAAe,CAACH,WAAW,CAAC,CAAC,CAAC;IACpC,CAAC;EACH,CAAC,EAAE,CAACf,KAAK,CAAC,CAAC;EAEX,oBACEH,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAKuB,GAAG,EAAEhB,OAAQ;MAACiB,GAAG,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpC5B,OAAA;MACE6B,IAAI,EAAC,MAAM;MACXC,MAAM,EAAC,uBAAuB;MAC9B1B,QAAQ,EAAEM,YAAa;MACvBqB,GAAG,EAAEtB;IAAS;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,EAEDzB,KAAK,iBAAIH,OAAA;MAAQgC,OAAO,EAAEjB,gBAAiB;MAAAO,QAAA,EAAC;IAAG;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV;AAACtB,EAAA,CA7CQL,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AA+ClB,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}