{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nfunction useAsync(asyncFunction) {\n  _s();\n  const [pending, setPending] = useState(false);\n  const [error, setError] = useState(null);\n  const wrappedFunction = async (...args) => {\n    try {\n      setPending(true);\n      setError(null);\n      return await asyncFunction(...args);\n    } catch (error) {\n      setError(error);\n      return;\n    } finally {\n      setPending(false);\n    }\n  };\n  return [pending, error, wrappedFunction];\n}\n_s(useAsync, \"eV+UsqSWk8n0t1QK9HKIbSqmJBQ=\");\nexport default useAsync;","map":{"version":3,"names":["useState","useAsync","asyncFunction","_s","pending","setPending","error","setError","wrappedFunction","args"],"sources":["C:/Programming/Codeit Sprint/part-2/react-practice/foodit/src/components/hooks/useAsync.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction useAsync(asyncFunction) {\r\n  const [pending, setPending] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const wrappedFunction = async (...args) => {\r\n    try {\r\n      setPending(true);\r\n      setError(null);\r\n      return await asyncFunction(...args);\r\n    } catch (error) {\r\n      setError(error);\r\n      return;\r\n    } finally {\r\n      setPending(false);\r\n    }\r\n  };\r\n\r\n  return [pending, error, wrappedFunction];\r\n}\r\nexport default useAsync;\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,SAASC,QAAQA,CAACC,aAAa,EAAE;EAAAC,EAAA;EAC/B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMQ,eAAe,GAAG,MAAAA,CAAO,GAAGC,IAAI,KAAK;IACzC,IAAI;MACFJ,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MACd,OAAO,MAAML,aAAa,CAAC,GAAGO,IAAI,CAAC;IACrC,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAAC;MACf;IACF,CAAC,SAAS;MACRD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,OAAO,CAACD,OAAO,EAAEE,KAAK,EAAEE,eAAe,CAAC;AAC1C;AAACL,EAAA,CAlBQF,QAAQ;AAmBjB,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}