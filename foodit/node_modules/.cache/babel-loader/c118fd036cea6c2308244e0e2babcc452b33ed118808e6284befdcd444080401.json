{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\Codeit Sprint\\\\part-2\\\\react-practice\\\\foodit\\\\src\\\\components\\\\FoodForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport FileInput from \"./FileInput\";\nimport { createFood } from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_VALUES = {\n  title: \"\",\n  calorie: 0,\n  content: \"\",\n  imgFile: null\n};\nfunction FoodForm({\n  onSubmitSuccess,\n  initalValues,\n  initalPreview\n}) {\n  _s();\n  const [values, setValues] = useState(INITIAL_VALUES);\n  const [isSubmitting, setIsSubmitting] = useState(false); // 로딩 처리\n  const [submittingError, setSubmittingError] = useState(null); // 에러 처리\n\n  // 칼로리 값이 문자열로 처리되어 숫자로 바꿔줌 (인풋값이 숫자일 경우에만 처리)\n  function sanitize(type, value) {\n    switch (type) {\n      case \"number\":\n        return Number(value) || 0;\n      default:\n        return value;\n    }\n  }\n  const handleChange = (name, value) => {\n    setValues(prevValues => ({\n      ...prevValues,\n      [name]: value\n    }));\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value,\n      type\n    } = e.target;\n    handleChange(name, sanitize(type, value));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"imgFile\", values.imgFile);\n    formData.append(\"title\", values.title);\n    formData.append(\"calorie\", values.calorie);\n    formData.append(\"content\", values.content);\n    let result;\n    try {\n      setIsSubmitting(true);\n      setSubmittingError(null);\n      result = await createFood(formData);\n    } catch (error) {\n      setSubmittingError(error);\n      return;\n    } finally {\n      setIsSubmitting(false);\n    }\n    const {\n      food\n    } = result;\n    onSubmitSuccess(food);\n    setValues(INITIAL_VALUES);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(FileInput, {\n      name: \"imgFile\",\n      value: values.imgFile,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"title\",\n      onChange: handleInputChange,\n      value: values.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"calorie\",\n      onChange: handleInputChange,\n      value: values.calorie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"content\",\n      onChange: handleInputChange,\n      value: values.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: isSubmitting,\n      children: \"\\uD655\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), (submittingError === null || submittingError === void 0 ? void 0 : submittingError.message) && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: submittingError.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(FoodForm, \"J12oCWwVDGp6ReZYftdOv9DAYN4=\");\n_c = FoodForm;\nexport default FoodForm;\nvar _c;\n$RefreshReg$(_c, \"FoodForm\");","map":{"version":3,"names":["useState","FileInput","createFood","jsxDEV","_jsxDEV","INITIAL_VALUES","title","calorie","content","imgFile","FoodForm","onSubmitSuccess","initalValues","initalPreview","_s","values","setValues","isSubmitting","setIsSubmitting","submittingError","setSubmittingError","sanitize","type","value","Number","handleChange","name","prevValues","handleInputChange","e","target","handleSubmit","preventDefault","formData","FormData","append","result","error","food","onSubmit","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","disabled","message","_c","$RefreshReg$"],"sources":["C:/Programming/Codeit Sprint/part-2/react-practice/foodit/src/components/FoodForm.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport FileInput from \"./FileInput\";\r\nimport { createFood } from \"./api\";\r\n\r\nconst INITIAL_VALUES = {\r\n  title: \"\",\r\n  calorie: 0,\r\n  content: \"\",\r\n  imgFile: null,\r\n};\r\n\r\nfunction FoodForm({ onSubmitSuccess, initalValues, initalPreview }) {\r\n  const [values, setValues] = useState(INITIAL_VALUES);\r\n  const [isSubmitting, setIsSubmitting] = useState(false); // 로딩 처리\r\n  const [submittingError, setSubmittingError] = useState(null); // 에러 처리\r\n\r\n  // 칼로리 값이 문자열로 처리되어 숫자로 바꿔줌 (인풋값이 숫자일 경우에만 처리)\r\n  function sanitize(type, value) {\r\n    switch (type) {\r\n      case \"number\":\r\n        return Number(value) || 0;\r\n\r\n      default:\r\n        return value;\r\n    }\r\n  }\r\n\r\n  const handleChange = (name, value) => {\r\n    setValues((prevValues) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type } = e.target;\r\n    handleChange(name, sanitize(type, value));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"imgFile\", values.imgFile);\r\n    formData.append(\"title\", values.title);\r\n    formData.append(\"calorie\", values.calorie);\r\n    formData.append(\"content\", values.content);\r\n    let result;\r\n    try {\r\n      setIsSubmitting(true);\r\n      setSubmittingError(null);\r\n      result = await createFood(formData);\r\n    } catch (error) {\r\n      setSubmittingError(error);\r\n      return;\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n\r\n    const { food } = result;\r\n    onSubmitSuccess(food);\r\n\r\n    setValues(INITIAL_VALUES);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <FileInput\r\n        name=\"imgFile\"\r\n        value={values.imgFile}\r\n        onChange={handleChange}\r\n      />\r\n      <input\r\n        name=\"title\"\r\n        onChange={handleInputChange}\r\n        value={values.title}\r\n      ></input>\r\n      <input\r\n        type=\"number\"\r\n        name=\"calorie\"\r\n        onChange={handleInputChange}\r\n        value={values.calorie}\r\n      ></input>\r\n      <input\r\n        name=\"content\"\r\n        onChange={handleInputChange}\r\n        value={values.content}\r\n      ></input>\r\n      <button type=\"submit\" disabled={isSubmitting}>\r\n        확인\r\n      </button>\r\n      {submittingError?.message && <div>{submittingError.message}</div>}\r\n    </form>\r\n  );\r\n}\r\nexport default FoodForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}