{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\Codeit Sprint\\\\part-2\\\\react-practice\\\\foodit\\\\src\\\\components\\\\FoodForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FoodForm() {\n  _s();\n  const [values, setValues] = useState({\n    title: \"\",\n    calorie: 0,\n    content: \"\"\n  });\n\n  // 칼로리 값이 문자열로 처리되어 숫자로 바꿔줌( 인풋값이 숫자일 경우에만 처리)\n  function sanitize(type, value) {\n    switch (type) {\n      case \"number\":\n        return Number(value) || 0;\n      default:\n        return value;\n    }\n  }\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues(prevValues => ({\n      ...prevValues,\n      [name]: sanitize(type, value)\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(values);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"title\",\n      onChange: handleChange,\n      value: values.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"calorie\",\n      onChange: handleChange,\n      value: values.calorie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"content\",\n      onChange: handleChange,\n      value: values.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\uD655\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(FoodForm, \"jWUjBliJmj+xIq4RalMX+HElDvQ=\");\n_c = FoodForm;\nexport default FoodForm;\nvar _c;\n$RefreshReg$(_c, \"FoodForm\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","FoodForm","_s","values","setValues","title","calorie","content","sanitize","type","value","Number","handleChange","e","name","target","prevValues","handleSubmit","preventDefault","console","log","onSubmit","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Programming/Codeit Sprint/part-2/react-practice/foodit/src/components/FoodForm.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction FoodForm() {\r\n  const [values, setValues] = useState({\r\n    title: \"\",\r\n    calorie: 0,\r\n    content: \"\",\r\n  });\r\n\r\n  // 칼로리 값이 문자열로 처리되어 숫자로 바꿔줌( 인풋값이 숫자일 경우에만 처리)\r\n  function sanitize(type, value) {\r\n    switch (type) {\r\n      case \"number\":\r\n        return Number(value) || 0;\r\n\r\n      default:\r\n        return value;\r\n    }\r\n  }\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues((prevValues) => ({\r\n      ...prevValues,\r\n      [name]: sanitize(type, value),\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(values);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input name=\"title\" onChange={handleChange} value={values.title}></input>\r\n      <input\r\n        type=\"number\"\r\n        name=\"calorie\"\r\n        onChange={handleChange}\r\n        value={values.calorie}\r\n      ></input>\r\n      <input\r\n        name=\"content\"\r\n        onChange={handleChange}\r\n        value={values.content}\r\n      ></input>\r\n      <button type=\"submit\">확인</button>\r\n    </form>\r\n  );\r\n}\r\nexport default FoodForm;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC;IACnCO,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,CAAC;IACVC,OAAO,EAAE;EACX,CAAC,CAAC;;EAEF;EACA,SAASC,QAAQA,CAACC,IAAI,EAAEC,KAAK,EAAE;IAC7B,QAAQD,IAAI;MACV,KAAK,QAAQ;QACX,OAAOE,MAAM,CAACD,KAAK,CAAC,IAAI,CAAC;MAE3B;QACE,OAAOA,KAAK;IAChB;EACF;EACA,MAAME,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEJ;IAAM,CAAC,GAAGG,CAAC,CAACE,MAAM;IAChCX,SAAS,CAAEY,UAAU,KAAM;MACzB,GAAGA,UAAU;MACb,CAACF,IAAI,GAAGN,QAAQ,CAACC,IAAI,EAAEC,KAAK;IAC9B,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMO,YAAY,GAAIJ,CAAC,IAAK;IAC1BA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAACjB,MAAM,CAAC;EACrB,CAAC;EAED,oBACEH,OAAA;IAAMqB,QAAQ,EAAEJ,YAAa;IAAAK,QAAA,gBAC3BtB,OAAA;MAAOc,IAAI,EAAC,OAAO;MAACS,QAAQ,EAAEX,YAAa;MAACF,KAAK,EAAEP,MAAM,CAACE;IAAM;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzE3B,OAAA;MACES,IAAI,EAAC,QAAQ;MACbK,IAAI,EAAC,SAAS;MACdS,QAAQ,EAAEX,YAAa;MACvBF,KAAK,EAAEP,MAAM,CAACG;IAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACT3B,OAAA;MACEc,IAAI,EAAC,SAAS;MACdS,QAAQ,EAAEX,YAAa;MACvBF,KAAK,EAAEP,MAAM,CAACI;IAAQ;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACT3B,OAAA;MAAQS,IAAI,EAAC,QAAQ;MAAAa,QAAA,EAAC;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEX;AAACzB,EAAA,CA/CQD,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAgDjB,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}