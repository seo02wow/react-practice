{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\Codeit Sprint\\\\part-2\\\\react-practice\\\\foodit\\\\src\\\\contexts\\\\LocaleContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LocaleContext = /*#__PURE__*/createContext();\nexport function LocaleProvider({\n  defalutValue = \"ko\",\n  children\n}) {\n  _s();\n  const [locale, setLocale] = useState(defalutValue);\n  return /*#__PURE__*/_jsxDEV(LocaleContext.Provider, {\n    value: {\n      locale,\n      setLocale\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_s(LocaleProvider, \"iQ5ACIPWpe0oByJ1QYxU3EkXXAU=\");\n_c = LocaleProvider;\nexport function useLocale() {\n  _s2();\n  const context = useContext(LocaleContext);\n  if (!context) {\n    throw new Error(\"반드시 LocaleProvider 안에서 사용해야 합니다.\");\n  }\n  return context.locale;\n}\n_s2(useLocale, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport function useSetLocale() {\n  _s3();\n  const context = useContext(LocaleContext);\n  if (!context) {\n    throw new Error(\"반드시 LocaleProvider 안에서 사용해야 합니다.\");\n  }\n  return context.setLocale;\n}\n_s3(useSetLocale, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"LocaleProvider\");","map":{"version":3,"names":["createContext","useContext","useState","jsxDEV","_jsxDEV","LocaleContext","LocaleProvider","defalutValue","children","_s","locale","setLocale","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useLocale","_s2","context","Error","useSetLocale","_s3","$RefreshReg$"],"sources":["C:/Programming/Codeit Sprint/part-2/react-practice/foodit/src/contexts/LocaleContext.js"],"sourcesContent":["import { createContext, useContext, useState } from \"react\";\r\n\r\nconst LocaleContext = createContext();\r\n\r\nexport function LocaleProvider({ defalutValue = \"ko\", children }) {\r\n  const [locale, setLocale] = useState(defalutValue);\r\n  return (\r\n    <LocaleContext.Provider value={{ locale, setLocale }}>\r\n      {children}\r\n    </LocaleContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useLocale() {\r\n  const context = useContext(LocaleContext);\r\n\r\n  if (!context) {\r\n    throw new Error(\"반드시 LocaleProvider 안에서 사용해야 합니다.\");\r\n  }\r\n\r\n  return context.locale;\r\n}\r\nexport function useSetLocale() {\r\n  const context = useContext(LocaleContext);\r\n\r\n  if (!context) {\r\n    throw new Error(\"반드시 LocaleProvider 안에서 사용해야 합니다.\");\r\n  }\r\n\r\n  return context.setLocale;\r\n}\r\n"],"mappings":";;;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,aAAa,gBAAGL,aAAa,CAAC,CAAC;AAErC,OAAO,SAASM,cAAcA,CAAC;EAAEC,YAAY,GAAG,IAAI;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAChE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAACK,YAAY,CAAC;EAClD,oBACEH,OAAA,CAACC,aAAa,CAACO,QAAQ;IAACC,KAAK,EAAE;MAAEH,MAAM;MAAEC;IAAU,CAAE;IAAAH,QAAA,EAClDA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B;AAACR,EAAA,CAPeH,cAAc;AAAAY,EAAA,GAAdZ,cAAc;AAS9B,OAAO,SAASa,SAASA,CAAA,EAAG;EAAAC,GAAA;EAC1B,MAAMC,OAAO,GAAGpB,UAAU,CAACI,aAAa,CAAC;EAEzC,IAAI,CAACgB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,kCAAkC,CAAC;EACrD;EAEA,OAAOD,OAAO,CAACX,MAAM;AACvB;AAACU,GAAA,CAReD,SAAS;AASzB,OAAO,SAASI,YAAYA,CAAA,EAAG;EAAAC,GAAA;EAC7B,MAAMH,OAAO,GAAGpB,UAAU,CAACI,aAAa,CAAC;EAEzC,IAAI,CAACgB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,kCAAkC,CAAC;EACrD;EAEA,OAAOD,OAAO,CAACV,SAAS;AAC1B;AAACa,GAAA,CAReD,YAAY;AAAA,IAAAL,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}